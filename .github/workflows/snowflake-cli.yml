name: Snowflake CLI Pipeline Trigger

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  run-snowflake-cli:
    runs-on: ubuntu-latest
    name: Trigger Snowflake ML Pipeline

    steps:
      # ‚úÖ Step 1: Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ‚úÖ Step 2: Setup Snowflake CLI
      - name: Setup Snowflake CLI
        uses: snowflakedb/snowflake-cli-action@v2.0

      # ‚úÖ Step 3: Verify CLI installation
      - name: Verify Snowflake CLI Installation
        run: |
          echo "üß© Checking Snowflake CLI installation..."
          which snowsql || echo "‚ùå snowsql not found in PATH"
          snowsql --version || echo "‚ùå Unable to fetch version"
          echo "‚úÖ Snowflake CLI installation verified."

      # ‚úÖ Step 4: Trigger Snowflake ML Pipeline Task
      - name: Execute Snowflake Task
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          echo "üöÄ Triggering Snowflake ML pipeline..."
          snowsql -q "USE WAREHOUSE ${SNOWFLAKE_WAREHOUSE}; USE DATABASE ${SNOWFLAKE_DATABASE}; USE SCHEMA ${SNOWFLAKE_SCHEMA}; EXECUTE TASK TASK_1_DATA_INGESTION;"
          echo "‚úÖ Pipeline triggered successfully!"

      # ‚úÖ Step 5: Download the latest ONNX model
      - name: Download latest ONNX model
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          echo "üì• Downloading latest ONNX model from Snowflake stage..."
          mkdir -p models
          snowsql -q "GET @ML_MODELS_STAGE/latest_model.onnx file://./models;"
          echo "‚úÖ Model downloaded to ./models directory."

      # ‚úÖ Step 6: Upload ONNX model as a workflow artifact
      - name: Upload Model Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: downloaded-model
          path: models/
          retention-days: 7
